# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    sudo apt-get install ansible
    sudo ansible-playbook -i "localhost," -c local ansible/install_pipeline.yml
    sudo python setup.py install
  displayName: 'Run ansible-playbook'

- script: |
    sudo sh util/install.sh -W
  displayName: 'Build and install Containernet (using Mininet installer)'

- script: |
    sudo make -f Makefile develop
   - displayName: install Containernet Python egg etc.

- script: |
    sudo docker pull ubuntu:trusty
   - displayNname: download 'ubuntu' docker image for Containernet example

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
